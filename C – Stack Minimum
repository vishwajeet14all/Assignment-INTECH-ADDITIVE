#include <bits/stdc++.h>
using namespace std;

struct my_stack{
    vector<int>v;
    int min;
    void push(int x)
    {
        if(!v.size())
        {
            v.push_back(x);
            min=x;
        }
        else if(x<=min)
        {
            v.push_back(2*x-min);
            min=x;
        }
        else
        v.push_back(x);
    }
    void pop()
    {
        if(!v.size())
        cout<<"Stack is already empty!"<<endl;
        else if(v.back()<=min)
        {
            cout<<"Popped item is: "<<min<<endl;
            min=2*min-v.back();
            v.pop_back();
        }
        else
        {
            cout<<"Popped item is: "<<v.back()<<endl;
            v.pop_back();
        }
    }
    void get_min()
    {
        if(!v.size())
        cout<<"No minimum element present!"<<endl;
        else
        cout<<"minimum element is: "<<min<<endl;
    }
};

int main(){
    
	my_stack s;
	s.push(2);
	s.get_min();
	s.push(4);
	s.get_min();
	s.push(-1);
	s.get_min();
	s.push(3);
	s.get_min();
	s.push(-1);
	s.get_min();
	s.push(-4);
	s.get_min();
	s.pop();
	s.get_min();
	s.pop();
	s.get_min();
	s.push(3);
	s.get_min();
	s.pop();
	s.get_min();
	s.push(-2);
	s.get_min();
	return 0;
}


Real Time Applications of Stack â€“ 
1.	Converting Infix to Prefix Expression.
2.	History of Visited Websites.
3.	Forward-Backward Surfing in the Browser.
4.	Undo/Redo button/operation in word Processor.
